name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Build frontend
      run: npm run build
      
    - name: Build backend
      run: npm run bot:build
      
    - name: Test TypeScript compilation
      run: npx tsc --noEmit

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level critical

  validate-config:
    name: Validate Configuration
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate render.yaml
      run: |
        if [ ! -f render.yaml ]; then
          echo "render.yaml not found!"
          exit 1
        fi
        echo "render.yaml exists âœ“"
        
    - name: Validate environment template
      run: |
        if [ ! -f .env.example ]; then
          echo ".env.example not found!"
          exit 1
        fi
        echo ".env.example exists âœ“"
        
    - name: Check required files
      run: |
        files=("package.json" "next.config.js" "tailwind.config.js" "tsconfig.json")
        for file in "${files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "$file not found!"
            exit 1
          fi
          echo "$file exists âœ“"
        done

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: [test, security, validate-config]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create test environment file
      run: |
        cp .env.example .env.test
        # Set test values
        sed -i 's/your_discord_bot_token_here/test_token/g' .env.test
        sed -i 's/your_discord_server_id_here/123456789/g' .env.test
        
    - name: Test production build
      env:
        NODE_ENV: production
      run: |
        npm run build
        npm run bot:build
        
    - name: Verify build artifacts
      run: |
        if [ ! -d ".next" ]; then
          echo "Frontend build failed - .next directory not found"
          exit 1
        fi
        if [ ! -d "backend/dist" ]; then
          echo "Backend build failed - backend/dist directory not found"
          exit 1
        fi
        echo "Build artifacts verified âœ“"

  deployment-ready:
    name: Deployment Ready Check
    runs-on: ubuntu-latest
    needs: [build-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment Ready
      run: |
        echo "ðŸš€ All checks passed! Ready for deployment to Render"
        echo "âœ… Tests passed"
        echo "âœ… Security audit completed"
        echo "âœ… Configuration validated"
        echo "âœ… Build successful"
        echo ""
        echo "Next steps:"
        echo "1. Push to main branch triggers auto-deployment on Render"
        echo "2. Monitor deployment logs in Render dashboard"
        echo "3. Verify health endpoints after deployment" 